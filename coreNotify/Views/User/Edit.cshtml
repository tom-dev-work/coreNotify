@using CoreNotify.Areas.Identity.Data;
@using coreNotify.Core.ViewModels;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model EditUserViewModel


	<div class="container">
		<div class="row">
			<div class="mr-3">
				<a asp-controller="User" asp-action="Index" class="btn btn-primary">
					<span class="fas fa-arrow-left"></span>
				</a>
			</div>
			<h1 class="mb-4">Edit User</h1>
		</div>
	@using (Html.BeginForm("EditPost", "User"))
	{
		@Html.HiddenFor(h => Model.User.Id);
		<div class="form-group focused">
			<label asp-for="User.FirstName"></label>
			<input type="text" class="form-control" asp-for="User.FirstName">
			<span asp-validation-for="User.FirstName" class="text-danger"></span>
		</div>
		<div class="form-group focused">
			<label asp-for="User.LastName"></label>
			<input type="text" class="form-control" asp-for="User.LastName">
			<span asp-validation-for="User.LastName" class="text-danger"></span>
		</div>
		<div class="form-group focused">
			<label asp-for="User.Email">
			<input type="email" class="form-control" asp-for="User.Email">
			</label>
			<span asp-validation-for="User.Email" class="text-danger"></span>
		</div>
		@for (int i = 0; i < @Model.Roles.Count(); i++)
		{
			<div class="form-check">
				@Html.CheckBoxFor(c => @Model.Roles[i].Selected)
				

				@Html.LabelFor(l => @Model.Roles[i].Selected, @Model.Roles[i].Text, new {@class="form-check-label"})
				@Html.HiddenFor(h => @Model.Roles[i].Text)
				@Html.HiddenFor(h => @Model.Roles[i].Value)
			</div>
		}
		<button class="mt-3 btn btn-pill btn-primary" type="submit"><span class="mr-1"><span class="fas fa-pen-nib"></span></span> Update</button>
	}
	</div>

@section Scripts {
	@{
		<partial name="_ValidationScriptsPartial" />
	}
}
